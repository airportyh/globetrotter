@import 'variables';

.category {
  display: flex;
  flex: 0 1 50%;
  align-items: center;
  padding: 2rem 0;
  position: relative;

  &__icon {
    $icon-height: 15rem;
    height: $icon-height;
    padding-right: 2rem;

    &-cover {
      position: absolute;
      width: $icon-height;
      height: $icon-height;
      transform: translateY(-50%);
      top: 50%;
      left: 0;
      z-index: map-get($z-index, positive);
      background: map-get($color, darkest);
      filter: blur(50px);
    }
  }

  &__wrapper {
    display: flex;
    flex-direction: column;
  }

  // the <label> of the checkbox becomes the container
  &__checkbox {
    font-weight: 700;
    position: relative;
    padding-left: 35px;
    margin-bottom: 5px;

    // create a custom checkbox
    &-element {
      position: absolute;
      top: 50%;
      left: 0;
      height: 20px;
      width: 20px;
      transform: translateY(-50%);
      border: map-get($border, thin) solid map-get($color, medium);
      user-select: none;

      // create a custom checkmark
      &::after {
        content: "";
        position: absolute;
        display: none;
      }
    }

    &-label {
      color: map-get($color, medium);
    }

    // hide the default checkbox input
    input {
      position: absolute;
      opacity: 0;
      display: none;
    }

    // make the label text brighter when selected
    input:indeterminate ~ .category__checkbox-label,
    input:checked ~ .category__checkbox-label {
      color: map-get($color, lightest);
    }

    // style the custom checkbox when the default checkbox input is indeterminate/checked
    input:indeterminate ~ .category__checkbox-element,
    input:checked ~ .category__checkbox-element {
      background: map-get($color, lightest);
      border-color: map-get($color, lightest);
    }

    // style the custom checkbox when the default checkbox input is indeterminate
    input:indeterminate ~ .category__checkbox-element::after {
      display: block;
      left: 50%;
      top: 50%;
      width: 8px;
      transform: translate(-50%, -50%);
      border-top: map-get($border, thin) solid map-get($color, darkest);
    }

    // style the custom checkmark when the default checkbox input is checked
    input:checked ~ .category__checkbox-element::after {
      display: block;
      left: 4px;
      top: 0px;
      width: 8px;
      height: 13px;
      border: solid map-get($color, darkest);
      border-width: 0 map-get($border, thin) map-get($border, thin) 0;
      transform: rotate(45deg);
    }
  }
}

// the <label> of the checkbox becomes the container
.subcategory {

  &__checkbox {
    position: relative;
    padding-left: 35px;
	  margin-bottom: 5px;
    margin-left: 20px;

    // create a custom checkbox
    &-element {
      position: absolute;
      top: 5px;
      left: 0;
      height: 20px;
      width: 20px;
      border: map-get($border, thin) solid map-get($color, medium);
      user-select: none;

      // create a custom checkmark
      &::after {
        content: "";
        position: absolute;
        display: none;
      }
    }

    &-label {
      color: map-get($color, medium);
    }

     // hide the default checkbox input
    input {
      position: absolute;
      opacity: 0;
      display: none;
    }

    // style the custom checkbox when the default checkbox input is checked
    input:checked ~ .subcategory__checkbox-element {
      border-color: map-get($color, lightest);
    }

    // style the custom checkmark when the default checkbox input is checked
    input:checked ~ .subcategory__checkbox-element::after {
      display: block;
      left: 4px;
      top: 0px;
      width: 8px;
      height: 13px;
      border: solid map-get($color, lightest);
      border-width: 0 map-get($border, thin) map-get($border, thin) 0;
      transform: rotate(45deg);
    }

    // make the label text brighter when selected
    input:indeterminate ~ .subcategory__checkbox-label,
    input:checked ~ .subcategory__checkbox-label {
      color: map-get($color, lightest);
    }
  }

}
